apiVersion: apps/v1
kind: Deployment
metadata:
  name: rubyapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rubyapp
  template:
    metadata:
      labels:
        app: rubyapp
    spec:
      containers:
      - name: rubyapp
        image: oluwasanmivic123/rubywebapp:latest
        env:
        - name: DATABASE_URL
          value: "postgres://victoria:victoria@postgres:5432/budget_app_development"
        - name: DATABASE_HOST
          value: postgres
        ports:
        - containerPort: 3000
      initContainers:
      - name: migration-container
        image: oluwasanmivic123/rubywebapp:latest
        command: ["bin/rails", "db:migrate", "RAILS_ENV=development"]


---
apiVersion: v1
kind: Service
metadata:
  name: rubyapp
spec:
  selector:
    app: rubyapp
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000

# Deployment Explanation:
# - We define a Kubernetes Deployment for the Ruby application.
# - We specify one replica and set labels for pod management.
# - The container runs the Ruby application, connects to the database, and listens on port 3000.
# - An initContainer performs database migrations during initialization.

# Service Explanation:
# - We create a Kubernetes Service named 'rubyapp' to expose the Ruby application.
# - It routes traffic to pods with the label 'app: rubyapp' and exposes port 3000.
